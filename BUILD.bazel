load(
    "@ignition//tools/workspace:build_defs.bzl",
    "IGNITION_ROOT",
    "IGNITION_FEATURES",
    "IGNITION_VISIBILITY",
    "ign_configure_header",
    "ign_export_header",
    "ign_include_header"
)

package(
    default_visibility = IGNITION_VISIBILITY,
    features = IGNITION_FEATURES,
)

licenses(["notice"]) # Apache-2.0

ign_configure_header(
    name = "config",
    package = "ign_common",
    src = "include/ignition/common/config.hh.in",
    cmakelists = ["CMakeLists.txt"],
)

ign_export_header(
    name = "include/ignition/common/Export.hh",
    export_base = "IGNITION_COMMON",
    lib_name = "ignition-common",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = glob(
    include = [
        "include/ignition/common/*.hh",
        "include/ignition/common/detail/*.hh",
    ],
)

private_headers = glob(["src/*.hh"])

sources = glob(
    include = ["src/*.cc"],
    exclude = ["src/*_TEST.cc", "src/**/*_TEST.cc"],
)

test_sources = glob(
    include = ["src/*_TEST.cc"],
)

ign_include_header(
    name = "commonhh_genrule",
    out = "include/ignition/common.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/common/config.hh",
        "include/ignition/common/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/common/config.hh",
    "include/ignition/common/Export.hh",
    "include/ignition/common.hh",
]

cc_library(
    name = "ign_common",
    srcs = sources + private_headers,
    hdrs = public_headers,
    includes = ["include"],
    linkopts = ["-ldl"],
    deps = [
        "@uuid",
        IGNITION_ROOT + "ign_math",
    ],
)

cc_library(
    name = "test_data",
    data = ["test/data"]
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    deps = [
        ":ign_common",
        IGNITION_ROOT + "ign_common/testing",
        "@gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]

